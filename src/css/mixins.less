@base-font-size: 	16px;
@base-line-height: 	1.5;

// this value may vary for each font
// unitless value relative to 1em
@cap-height: 		0.68;

.baseline(@font-size, @scale: 2) {

    // rhythm unit
    @rhythm: @base-line-height * @font-size / @scale;

    // number of rhythm units that can fit the font-size
    @lines: ceil((@font-size + 0.001px) / @rhythm);

    // calculate the new line-height
    @line-height: @rhythm * @lines / @font-size;

    // use the results
    font-size: @font-size;
    line-height: @line-height;

    @baseline-distance: (@line-height - @cap-height) / 2;

/////////////////
// METHOD 1
//
// this method can relatively move down elements you may not want to
// position: relative;
// top: @baseline-distance + em;

/////////////////
// METHOD 2
// if you use this mixin only on elements that have one direction margins
// http://csswizardry.com/2012/06/single-direction-margin-declarations/
// you can use this method with no worries.
// this method assumes the direction is down and the margin is @base-line-height
    padding-top: @baseline-distance + em;
    margin-bottom: @base-line-height - @baseline-distance + em;
}

.font-face (@family, @file-base, @weight: normal, @style: normal) {
    @font-face {
        font-family: @family;
        src: url("@{file-base}.eot");
        src: url("@{file-base}.eot?#iefix") format("embedded-opentype"),
        url("@{file-base}.woff") format("woff"),
        url("@{file-base}.ttf") format("truetype");
        font-weight: @weight;
        font-style: @style;
    }
}

.animation (@name, @duration, @ease, @count) {
    -webkit-animation: @name @duration @ease @count;
    animation: @name @duration @ease @count;
}

.border-radius (@radius: 5px) {
    -webkit-border-radius: @radius;
    border-radius: @radius;
}

.border-radius-custom (@topleft: 5px, @topright: 5px, @bottomleft: 5px, @bottomright: 5px) {
    -webkit-border-radius: @topleft @topright @bottomright @bottomleft;
    border-radius: @topleft @topright @bottomright @bottomleft;
}

.box-shadow (@x: 0px, @y: 3px, @blur: 5px, @alpha: 0.5) {
    -webkit-box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
    box-shadow: @x @y @blur rgba(0, 0, 0, @alpha);
}

.transition (@prop: all, @time: 1s, @ease: linear) {
    -webkit-transition: @prop @time @ease;
    transition: @prop @time @ease;
}

.transform (@rotate: 90deg, @scale: 1, @skew: 1deg, @translate: 10px) {
    -webkit-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -ms-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
}

.gradient (@origin: left, @start: #ffffff, @stop: #000000) {
    background-color: @start;
    background-image: -webkit-linear-gradient(@origin, @start, @stop);
    background-image: -moz-linear-gradient(@origin, @start, @stop);
    background-image: linear-gradient(@origin, @start, @stop);
}

.quick-gradient (@origin: left, @alpha: 0.2) {
    background-image: -webkit-linear-gradient(@origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0,@alpha));
    background-image: -moz-linear-gradient(@origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0,@alpha));
    background-image: linear-gradient(@origin, rgba(0, 0, 0, 0.0), rgba(0, 0, 0,@alpha));
}

.reflect (@length: 50%, @opacity: 0.2) {
    -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(@length, transparent), to(rgba(255, 255, 255,@opacity)));
}

.vertical-align {
    width: 100%;
    top: 50%;
    margin: 0 auto;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}