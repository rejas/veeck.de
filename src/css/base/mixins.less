/**
 * less-based version of sass-mixin from https://medium.com/p/e258fce47a9b
 */


// this value may vary for each font
// unitless value relative to 1em
@cap-height: 		0.68;

.baseline(@font-size, @scale: 2) {

    // rhythm unit
    @rhythm: @base-line-height * @font-size / @scale;

    // number of rhythm units that can fit the font-size
    @lines: ceil((@font-size + 0.001px) / @rhythm);

    // calculate the new line-height
    @line-height: @rhythm * @lines / @font-size;

    // use the results
    font-size: @font-size;
    line-height: @line-height;

    @baseline-distance: (@line-height - @cap-height) / 2;

    /////////////////
    // METHOD 1
    //
    // this method can relatively move down elements you may not want to
    // position: relative;
    // top: @baseline-distance + 0em;

    /////////////////
    // METHOD 2
    // if you use this mixin only on elements that have one direction margins
    // http://csswizardry.com/2012/06/single-direction-margin-declarations/
    // you can use this method with no worries.
    // this method assumes the direction is down and the margin is @base-line-height
    padding-top: @baseline-distance;
    margin-bottom: @base-line-height - @baseline-distance + 0em;
}

/**
 * A mixin which helps you to add depth to elements according to the Google Material Design spec:
 * http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality
 *
 * Please note that the values given in the specification cannot be used as is. To create the same visual experience
 * the blur parameter has to be doubled.
 *
 * Author: Florian Kutschera (@gefangenimnetz), Conceptboard GmbH (@conceptboardapp)
 *
 * Example usage:
 *
 * .card {
 *     width: 95px;
 *     height: 95px;
 *     background: #f4f4f4;
 *     -webkit-transition: all 250ms;
 *     -moz-transition: all 250ms;
 *     transition: all 250ms;
 *     .boxshadow(1);
 *     &:hover {
 *         .boxshadow(3);
 *         -webkit-transform: translateY(-5px);
 *         -moz-transform: translateY(-5px);
 *         transform: translateY(-5px);
 *     }
 * }
 *
 */

.boxshadow(@level: 1){
    & when (@level = 1) {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    }
    & when (@level = 2) {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    }
    & when (@level = 3) {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }
    & when (@level = 4) {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    }
    & when (@level = 5) {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 *
 * Source: http://nicolasgallagher.com/micro-clearfix-hack/
 */

.clearfix() {
    &:before,
    &:after {
        content: " "; // 1
        display: table; // 2
    }
    &:after {
        clear: both;
    }
}

/**
 * other mixins
 */

.colorVar (@property, @cssvar, @color) {
    @{property}: @color;
    @{property}: var(@cssvar);
}

.font-face (@family, @file-base, @weight: normal, @style: normal) {
    @font-face {
        font-family: @family;
        src: url("@{file-base}.eot");
        src: url("@{file-base}.eot?#iefix") format("embedded-opentype"),
        url("@{file-base}.woff") format("woff"),
        url("@{file-base}.ttf") format("truetype");
        font-weight: @weight;
        font-style: @style;
    }
}

.transform (property) {
    transition: property .125s ease-in-out;
}

.vertical-align () {
    width: 100%;
    top: 50%;
    margin: 0 auto;
    transform: translateY(-50%);
}
