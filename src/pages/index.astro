---
import { getCollection } from 'astro:content';

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import CallToAction from '../components/CallToAction.astro';
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/previews/PortfolioPreview.astro';

// External Component Import
import { BigHead } from '@bigheads/core';
import * as React from 'react';
import TravelPreview from '../components/previews/TravelPreview.astro';
import GalleryPreview from '../components/previews/GalleryPreview.astro';
import BlogPreview from '../components/previews/BlogPreview.astro';

// Content Fetching: List four most recent blog posts
const blog = (await getCollection('blog'))
	.sort((a, b) => b.data.first_published.valueOf() - a.data.first_published.valueOf())
	.slice(0, 4);

// Content Fetching: List four most recent projects
const projects = (await getCollection('projects'))
	.sort((a, b) => b.data.first_published.valueOf() - a.data.first_published.valueOf())
	.slice(0, 4);

// Content Fetching: List four most recent travels
const travels = (await getCollection('travels'))
	.sort((a, b) => b.data.first_published.valueOf() - a.data.first_published.valueOf())
	.slice(0, 4);

// Content Fetching: List four most recent galleries
const galleries = (await getCollection('galleries'))
	.sort((a, b) => b.data.last_modified.valueOf() - a.data.last_modified.valueOf())
	.slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/basics/astro-components/
---

<BaseLayout>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Hello, my name is Veeck"
					tagline="I am a Frontend Developer who is currently based in Berlin, Germany."
					align="start"
				>
					<div class="roles">
						<Pill><Icon icon="code" size="1.33em" />Computerschlampe</Pill>
						<Pill><Icon icon="camera" size="1.33em" />Hoffotograf</Pill>
						<Pill><Icon icon="pencil-line" size="1.33em" />Terrorpoet</Pill>
					</div>
				</Hero>

				<BigHead
					accessory="shades"
					body="chest"
					circleColor="blue"
					clothing="dressShirt"
					clothingColor="black"
					eyebrows="raised"
					eyes="simple"
					faceMask={false}
					faceMaskColor="white"
					facialHair="mediumBeard"
					graphic="react"
					hair="none"
					hairColor="white"
					hat="none"
					hatColor="blue"
					lashes={false}
					lipColor="red"
					mouth="openSmile"
					skinTone="light"
				/>
			</header>
		</div>

		<main class="wrapper stack gap-20 lg:gap-48">
			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>My blog</h3>
					<p>only occasionally updated like a true blog</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							blog.map((post) => (
								<li>
									<BlogPreview post={post} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/blog/">
						View all posts
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Selected Projects</h3>
					<p>all the techy nerdy geeky stuff I do for fun</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							projects.map((project) => (
								<li>
									<PortfolioPreview project={project} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/projects/">
						View all projects
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Selected Travels</h3>
					<p>travel diaries from around the world</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							travels.map((travel) => (
								<li>
									<TravelPreview travel={travel} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/travels/">
						View all diaries
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<section class="section with-background with-cta">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Selected Galleries</h3>
					<p>the panoramic pictures I have taken</p>
				</header>

				<div class="gallery">
					<Grid variant="offset">
						{
							galleries.map((gallery) => (
								<li>
									<GalleryPreview gallery={gallery} />
								</li>
							))
						}
					</Grid>
				</div>

				<div class="cta">
					<CallToAction href="/galleries/">
						View all galleries
						<Icon icon="arrow-right" size="1.2em" />
					</CallToAction>
				</div>
			</section>

			<!--<section class="section with-background bg-variant">
				<header class="section-header stack gap-2 lg:gap-4">
					<h3>Mentions</h3>
					<p>
						I have been fortunate enough to receive praise for my work in several publications. Take a look below to
						learn more.
					</p>
				</header>

				<div class="gallery">
					<Grid variant="small">
						{
							['Medium', 'BuzzFeed', 'The Next Web', 'awwwards.', 'TechCrunch'].map((brand) => (
								<li class="mention-card">
									<p>{brand}</p>
								</li>
							))
						}
					</Grid>
				</div>
			</section>-->
		</main>
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 5 / 4;
		object-fit: cover;
		object-position: top;
		border-radius: 1.5rem;
		box-shadow: var(--shadow-md);
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 3 / 4;
			border-radius: 4.5rem;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
		}

		.cta {
			grid-area: cta;
		}
	}

	/* ====================================================== */

	.mention-card {
		display: flex;
		height: 7rem;
		justify-content: center;
		align-items: center;
		text-align: center;
		border: 1px solid var(--gray-800);
		border-radius: 1.5rem;
		color: var(--gray-300);
		background: var(--gradient-subtle);
		box-shadow: var(--shadow-sm);
	}

	@media (min-width: 50em) {
		.mention-card {
			border-radius: 1.5rem;
			height: 9.5rem;
		}
	}
</style>
